// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeatherData;

namespace WeatherData.Migrations
{
    [DbContext(typeof(WeatherDataDbContext))]
    [Migration("20210217144028_SeedTables")]
    partial class SeedTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WeatherData.Models.Date", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Dates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TimeStamp = new DateTime(2021, 2, 17, 15, 40, 27, 173, DateTimeKind.Local).AddTicks(2683)
                        },
                        new
                        {
                            Id = 2,
                            TimeStamp = new DateTime(2021, 2, 17, 15, 40, 27, 182, DateTimeKind.Local).AddTicks(67)
                        },
                        new
                        {
                            Id = 3,
                            TimeStamp = new DateTime(2021, 2, 17, 15, 40, 27, 182, DateTimeKind.Local).AddTicks(225)
                        },
                        new
                        {
                            Id = 4,
                            TimeStamp = new DateTime(2021, 2, 17, 15, 40, 27, 182, DateTimeKind.Local).AddTicks(233)
                        });
                });

            modelBuilder.Entity("WeatherData.Models.Enviornment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DateId")
                        .HasColumnType("int");

                    b.Property<string>("InsideOrOutside")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DateId");

                    b.ToTable("Enviornments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateId = 1,
                            InsideOrOutside = "Outside"
                        },
                        new
                        {
                            Id = 2,
                            DateId = 2,
                            InsideOrOutside = "Inside"
                        },
                        new
                        {
                            Id = 3,
                            DateId = 3,
                            InsideOrOutside = "Outside"
                        },
                        new
                        {
                            Id = 4,
                            DateId = 4,
                            InsideOrOutside = "Inside"
                        });
                });

            modelBuilder.Entity("WeatherData.Models.Humidity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AirHumidity")
                        .HasColumnType("int");

                    b.Property<int>("EnviornmentId")
                        .HasColumnType("int");

                    b.Property<int?>("MoldId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EnviornmentId");

                    b.HasIndex("MoldId");

                    b.ToTable("Humidities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AirHumidity = 85,
                            EnviornmentId = 1
                        },
                        new
                        {
                            Id = 2,
                            AirHumidity = 39,
                            EnviornmentId = 2
                        },
                        new
                        {
                            Id = 3,
                            AirHumidity = 73,
                            EnviornmentId = 3
                        },
                        new
                        {
                            Id = 4,
                            AirHumidity = 35,
                            EnviornmentId = 4
                        });
                });

            modelBuilder.Entity("WeatherData.Models.Mold", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("RiskForMold")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Molds");
                });

            modelBuilder.Entity("WeatherData.Models.Temperature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EnviornmentId")
                        .HasColumnType("int");

                    b.Property<int?>("MoldId")
                        .HasColumnType("int");

                    b.Property<float>("Temp")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("EnviornmentId");

                    b.HasIndex("MoldId");

                    b.ToTable("Temperatures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EnviornmentId = 1,
                            Temp = -5f
                        },
                        new
                        {
                            Id = 2,
                            EnviornmentId = 2,
                            Temp = 25f
                        },
                        new
                        {
                            Id = 3,
                            EnviornmentId = 3,
                            Temp = -2f
                        },
                        new
                        {
                            Id = 4,
                            EnviornmentId = 4,
                            Temp = 22f
                        });
                });

            modelBuilder.Entity("WeatherData.Models.Enviornment", b =>
                {
                    b.HasOne("WeatherData.Models.Date", "Time")
                        .WithMany()
                        .HasForeignKey("DateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Time");
                });

            modelBuilder.Entity("WeatherData.Models.Humidity", b =>
                {
                    b.HasOne("WeatherData.Models.Enviornment", "Enviornment")
                        .WithMany()
                        .HasForeignKey("EnviornmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeatherData.Models.Mold", null)
                        .WithMany("Humidities")
                        .HasForeignKey("MoldId");

                    b.Navigation("Enviornment");
                });

            modelBuilder.Entity("WeatherData.Models.Temperature", b =>
                {
                    b.HasOne("WeatherData.Models.Enviornment", "Enviornment")
                        .WithMany()
                        .HasForeignKey("EnviornmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeatherData.Models.Mold", null)
                        .WithMany("Temperatures")
                        .HasForeignKey("MoldId");

                    b.Navigation("Enviornment");
                });

            modelBuilder.Entity("WeatherData.Models.Mold", b =>
                {
                    b.Navigation("Humidities");

                    b.Navigation("Temperatures");
                });
#pragma warning restore 612, 618
        }
    }
}
